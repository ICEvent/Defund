type Status = 
 variant {
   approved;
   cancelled;
   expired;
   rejected;
   review;
   submitted;
 };
type Result = 
 variant {
   err: text;
   ok: nat;
 };
type NewGrant = 
 record {
   amount: nat;
   currency: text;
   description: text;
   grantType: text;
   recipient: principal;
   reference: text;
   title: text;
 };
type Grant = 
 record {
   amount: nat;
   applicant: principal;
   currency: text;
   description: text;
   grantId: int;
   grantStatus: Status;
   grantType: text;
   recipient: principal;
   reference: text;
   submitime: int;
   title: text;
 };
service : {
  applyGrant: (NewGrant) -> (Result);
  getDonorCredit: (text) -> (opt nat) query;
  getGrants: (nat, nat) -> (vec Grant) query;
  updateExchangeRates: (text, nat) -> (Result);
}
